var searchIndex = new Map(JSON.parse('[\
["glob",{"t":"PFIFPFFFNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNONNNNNNOOONNNNNNNNNNNNNNNNNNNN","n":["Err","GlobError","GlobResult","MatchOptions","Ok","Paths","Pattern","PatternError","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","cause","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","cmp","default","default","description","description","eq","eq","error","escape","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","glob","glob_with","hash","hash","into","into","into","into","into","into_error","into_iter","matches","matches_path","matches_path_with","matches_with","msg","new","new","next","partial_cmp","partial_cmp","path","pos","require_literal_leading_dot","require_literal_separator","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"glob"],[97,"core::error"],[98,"core::option"],[99,"core::cmp"],[100,"std::io::error"],[101,"alloc::string"],[102,"core::fmt"],[103,"core::result"],[104,"core::hash"],[105,"std::path"],[106,"core::any"]],"i":[21,0,0,0,21,0,0,0,1,15,5,11,1,8,15,5,11,1,8,8,5,1,8,1,8,1,8,8,1,8,1,8,5,11,1,8,5,1,15,5,5,11,11,1,1,8,15,5,11,1,8,1,0,0,1,8,15,5,11,1,8,5,15,1,1,1,1,11,1,8,15,1,8,5,11,8,8,1,8,5,11,1,15,5,11,1,8,15,5,11,1,8,15,5,11,1,8],"f":"````````{{{d{b}}}{{d{f}}}}{{{d{c}}}{{d{e}}}{}{}}0000{{{d{hc}}}{{d{he}}}{}{}}0000`{{{d{j}}}{{n{{d{l}}}}}}{{{d{b}}}b}{{{d{A`}}}A`}{{{d{c}}{d{he}}}Ab{}{}}0{{{d{c}}}Ab{}}00{{{d{b}}{d{b}}}Ad}{{{d{A`}}{d{A`}}}Ad}{{}b}{{}A`}{{{d{j}}}{{d{f}}}}{{{d{Af}}}{{d{f}}}}{{{d{b}}{d{b}}}Ah}{{{d{A`}}{d{A`}}}Ah}{{{d{j}}}{{d{Aj}}}}{{{d{f}}}Al}{{{d{An}}{d{hB`}}}Bb}{{{d{j}}{d{hB`}}}Bb}0{{{d{Af}}{d{hB`}}}Bb}0{{{d{b}}{d{hB`}}}Bb}0{{{d{A`}}{d{hB`}}}Bb}{cc{}}0000{{{d{f}}}{{Bd{bAf}}}}{{{d{f}}}{{Bd{AnAf}}}}{{{d{f}}A`}{{Bd{AnAf}}}}{{{d{b}}{d{hc}}}AbBf}{{{d{A`}}{d{hc}}}AbBf}{ce{}{}}0000{jAj}1{{{d{b}}{d{f}}}Ah}{{{d{b}}{d{Bh}}}Ah}{{{d{b}}{d{Bh}}A`}Ah}{{{d{b}}{d{f}}A`}Ah}`:{{}A`}{{{d{hAn}}}{{n{Bj}}}}{{{d{b}}{d{b}}}{{n{Ad}}}}{{{d{A`}}{d{A`}}}{{n{Ad}}}}{{{d{j}}}{{d{Bh}}}}```{{{d{c}}}e{}{}}0{{{d{c}}}Al{}}00{c{{Bd{e}}}{}{}}000000000{{{d{c}}}Bl{}}0000","D":"Dj","p":[[5,"Pattern",0],[1,"reference"],[1,"str"],[0,"mut"],[5,"GlobError",0],[10,"Error",97],[6,"Option",98],[5,"MatchOptions",0],[1,"unit"],[6,"Ordering",99],[5,"PatternError",0],[1,"bool"],[5,"Error",100],[5,"String",101],[5,"Paths",0],[5,"Formatter",102],[8,"Result",102],[6,"Result",103],[10,"Hasher",104],[5,"Path",105],[8,"GlobResult",0],[5,"TypeId",106]],"r":[],"b":[[39,"impl-Debug-for-GlobError"],[40,"impl-Display-for-GlobError"],[41,"impl-Debug-for-PatternError"],[42,"impl-Display-for-PatternError"],[43,"impl-Debug-for-Pattern"],[44,"impl-Display-for-Pattern"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADwACAAKAAkAFQAPACcABwA0AAAANwABAD8AAABHAAIATgATAA=="}],\
["include_dir",{"t":"FPGFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Dir","Dir","DirEntry","File","File","Metadata","accessed","as_dir","as_file","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","contains","contents","contents_utf8","created","dirs","entries","eq","eq","eq","eq","extract","files","find","fmt","fmt","fmt","fmt","from","from","from","from","get_dir","get_entry","get_file","include_dir","into","into","into","into","metadata","modified","new","new","new","path","path","path","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_metadata"],"q":[[0,"include_dir"],[85,"include_dir::metadata"],[86,"std::time"],[87,"include_dir::dir_entry"],[88,"include_dir::dir"],[89,"core::option"],[90,"include_dir::file"],[91,"std::path"],[92,"core::convert"],[93,"core::iter::traits::iterator"],[94,"std::io::error"],[95,"glob"],[96,"core::result"],[97,"core::fmt"],[98,"core::time"],[99,"core::any"],[100,"include_dir_macros"]],"i":[0,4,0,0,4,0,1,4,4,5,4,7,1,5,4,7,1,4,5,4,7,1,5,4,7,1,5,4,7,1,1,5,7,7,1,5,5,5,4,7,1,5,5,5,5,4,7,1,5,4,7,1,5,5,5,0,5,4,7,1,7,1,5,7,1,5,4,7,5,4,7,1,5,4,7,1,5,4,7,1,5,4,7,1,7],"f":"``````{{{d{b}}}f}{{{d{h}}}{{l{{d{j}}}}}}{{{d{h}}}{{l{{d{n}}}}}}{{{d{c}}}{{d{e}}}{}{}}000{{{d{A`c}}}{{d{A`e}}}{}{}}000{{{d{h}}}{{d{{Ab{h}}}}}}{{{d{j}}}j}{{{d{h}}}h}{{{d{n}}}n}{{{d{b}}}b}{{{d{c}}{d{A`e}}}Ad{}{}}000{{{d{c}}}Ad{}}0000{{{d{j}}c}Af{{Aj{Ah}}}}{{{d{n}}}{{d{{Ab{Al}}}}}}{{{d{n}}}{{l{{d{An}}}}}}>{{{d{j}}}{{`{{Bb{}{{B`{{d{j}}}}}}}}}}{{{d{j}}}{{d{{Ab{h}}}}}}{{{d{j}}{d{j}}}Af}{{{d{h}}{d{h}}}Af}{{{d{n}}{d{n}}}Af}{{{d{b}}{d{b}}}Af}{{{d{j}}c}{{Bd{Ad}}}{{Aj{Ah}}}}{{{d{j}}}{{`{{Bb{}{{B`{{d{n}}}}}}}}}}{{{d{j}}{d{An}}}{{Bh{{`{{Bb{}{{B`{{d{h}}}}}}}}Bf}}}}{{{d{j}}{d{A`Bj}}}Bl}{{{d{h}}{d{A`Bj}}}Bl}{{{d{n}}{d{A`Bj}}}Bl}{{{d{b}}{d{A`Bj}}}Bl}{cc{}}000{{{d{j}}c}{{l{{d{j}}}}}{{Aj{Ah}}}}{{{d{j}}c}{{l{{d{h}}}}}{{Aj{Ah}}}}{{{d{j}}c}{{l{{d{n}}}}}{{Aj{Ah}}}}`{ce{}{}}000{{{d{n}}}{{l{{d{b}}}}}}{{{d{b}}}f}{{{d{An}}{d{{Ab{h}}}}}j}{{{d{An}}{d{{Ab{Al}}}}}n}{{BnBnBn}b}{{{d{j}}}{{d{Ah}}}}{{{d{h}}}{{d{Ah}}}}{{{d{n}}}{{d{Ah}}}}{{{d{c}}}e{}{}}000{c{{Bh{e}}}{}{}}0000000{{{d{c}}}C`{}}000{{nb}n}","D":"Eb","p":[[5,"Metadata",0,85],[1,"reference"],[5,"SystemTime",86],[6,"DirEntry",0,87],[5,"Dir",0,88],[6,"Option",89],[5,"File",0,90],[0,"mut"],[1,"slice"],[1,"unit"],[1,"bool"],[5,"Path",91],[10,"AsRef",92],[1,"u8"],[1,"str"],[17,"Item"],[10,"Iterator",93],[8,"Result",94],[5,"PatternError",95],[6,"Result",96],[5,"Formatter",97],[8,"Result",97],[5,"Duration",98],[5,"TypeId",99]],"r":[[0,88],[2,87],[3,90],[5,85],[55,100]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACwABQAKAAcAEwAMACYAAwAtAAMARQAPAA=="}],\
["include_dir_example",{"t":"JH","n":["PROJECT_DIR","main"],"q":[[0,"include_dir_example"]],"i":[0,0],"f":"`{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAAAAQACAA=="}],\
["include_dir_macros",{"t":"Q","n":["include_dir"],"q":[[0,"include_dir_macros"]],"i":[0],"f":"`","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["proc_macro2",{"t":"PPPGFPFPPFFPPPFPGFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNFENNNNNNNNNNNNNNN","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_character","byte_string","c_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","default","delim_span","delimiter","eq","eq","eq","eq","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[242,"proc_macro2::extra"],[259,"proc_macro2::token_stream"],[276,"core::ffi::c_str"],[277,"core::cmp"],[278,"core::marker"],[279,"core::convert"],[280,"core::iter::traits::collect"],[281,"core::fmt"],[282,"proc_macro"],[283,"core::result"],[284,"core::hash"],[285,"core::option"],[286,"alloc::string"],[287,"core::ops::range"],[288,"core::any"]],"i":[14,13,13,0,0,11,0,11,14,0,0,11,13,13,0,11,0,0,0,0,1,27,10,9,11,12,13,1,14,15,6,27,10,9,11,12,13,1,14,15,6,6,6,6,9,6,10,9,11,12,13,1,14,15,6,10,9,11,12,13,1,14,15,6,10,9,9,11,12,13,13,1,14,14,15,6,15,10,12,12,13,14,15,15,10,10,0,6,6,6,6,27,27,10,10,9,11,11,12,12,13,1,1,14,15,15,6,6,27,10,10,10,9,9,11,11,11,11,11,12,13,1,14,15,6,10,10,10,6,15,6,6,6,6,6,6,6,6,6,6,27,10,9,11,12,13,1,14,15,6,10,10,6,6,9,9,9,10,12,1,15,15,15,9,11,12,1,15,6,9,1,27,11,12,1,15,6,12,12,12,6,6,10,9,11,12,13,1,14,15,6,27,10,11,12,1,15,6,0,27,10,9,11,12,13,1,14,15,6,27,10,9,11,12,13,1,14,15,6,27,10,9,11,12,13,1,14,15,6,6,6,6,6,6,6,6,6,6,6,9,6,6,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39],"f":"````````````````````{{{d{b}}}f}{{{d{c}}}{{d{e}}}{}{}}000000000{{{d{hc}}}{{d{he}}}{}{}}000000000{jl}{{{d{{n{j}}}}}l}{{{d{A`}}}l}{{}Ab}{fl}{{{d{Ad}}}Ad}{{{d{Ab}}}Ab}{{{d{Af}}}Af}{{{d{Ah}}}Ah}{{{d{Aj}}}Aj}{{{d{b}}}b}{{{d{Al}}}Al}{{{d{An}}}An}{{{d{l}}}l}{{{d{c}}{d{he}}}B`{}{}}00000000{{{d{c}}}B`{}}00000000000{{{d{An}}{d{An}}}Bb}{{}Ad}{{{d{Ah}}}Bd}{{{d{Ah}}}Aj}{{{d{Aj}}{d{Aj}}}Bf}{{{d{Al}}{d{Al}}}Bf}{{{d{An}}{d{c}}}Bf{Bh{Bl{Bj}}}}{{{d{An}}{d{An}}}Bf}{{{d{hAd}}c}B`{{C`{}{{Bn{Ad}}}}}}{{{d{hAd}}c}B`{{C`{}{{Bn{Af}}}}}}`{Cbl}0{Cdl}0{{{d{Cf}}{d{hCh}}}Cj}0{{{d{Ad}}{d{hCh}}}Cj}0{{{d{Ab}}{d{hCh}}}Cj}{{{d{Af}}{d{hCh}}}Cj}0{{{d{Ah}}{d{hCh}}}Cj}0{{{d{Aj}}{d{hCh}}}Cj}{{{d{b}}{d{hCh}}}Cj}0{{{d{Al}}{d{hCh}}}Cj}{{{d{An}}{d{hCh}}}Cj}0{{{d{l}}{d{hCh}}}Cj}0{cc{}}0{AfAd}{ClAd}{CnAb}33{AhAf}{lAf}{bAf}{AnAf}777777{cAd{{C`{}{{Bn{Af}}}}}}{cAd{{C`{}{{Bn{Ad}}}}}}{{{d{Bj}}}{{D`{AdCf}}}}{{{d{Bj}}}{{D`{lCf}}}}{{{d{An}}{d{hc}}}B`Db}{Ddl}0{Dfl}0{Dhl}0{Djl}0{Dll}0{ce{}{}}000000000{AdDn}{{{d{Ad}}}Bf}{E`l}0{{{d{Ab}}Ab}{{Eb{Ab}}}}{{{d{Ab}}Ab}Ab}{{}Ab}{{}Ad}{{AjAd}Ah}{{fAl}b}{{{d{Bj}}Ab}An}0{{{d{An}}{d{An}}}{{Eb{Bb}}}}6{{{d{hAf}}Ab}B`}{{{d{hAh}}Ab}B`}{{{d{hb}}Ab}B`}{{{d{hAn}}Ab}B`}{{{d{hl}}Ab}B`}{{{d{Ab}}}{{Eb{Ed}}}}{{{d{b}}}Al}{{{d{Cf}}}Ab}{{{d{Af}}}Ab}{{{d{Ah}}}Ab}{{{d{b}}}Ab}{{{d{An}}}Ab}{{{d{l}}}Ab}33{{{d{Ah}}}Ad}{{{d{Bj}}}l}{{{d{l}}c}{{Eb{Ab}}}{{Eh{Ef}}}}{{{d{c}}}e{}{}}00000000{{{d{c}}}Ed{}}000000`{c{{D`{e}}}{}{}}0000000000000000000{{{d{c}}}Ej{}}000000000{Ell}0{Enl}0{F`l}0{Fbl}0{jl}0{AbCn}{Efl}0`{{{d{c}}}{{d{e}}}{}{}}{{{d{hc}}}{{d{he}}}{}{}}{{{d{Bd}}}Bd}{{{d{c}}{d{he}}}B`{}{}}{{{d{c}}}B`{}}0{{{d{Bd}}}Ab}{{{d{Bd}}{d{hCh}}}Cj}{cc{}}{ce{}{}}33{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Ej{}}``;:{{{d{Dn}}}Dn}98{{{d{Dn}}{d{hCh}}}Cj}655{{{d{hDn}}}{{Eb{Af}}}}{{{d{Dn}}}{{Fd{Ef{Eb{Ef}}}}}}6554","D":"Nh","p":[[5,"Punct",0],[1,"reference"],[1,"char"],[0,"mut"],[1,"u8"],[5,"Literal",0],[1,"slice"],[5,"CStr",276],[5,"Span",0],[5,"TokenStream",0],[6,"TokenTree",0],[5,"Group",0],[6,"Delimiter",0],[6,"Spacing",0],[5,"Ident",0],[1,"unit"],[6,"Ordering",277],[5,"DelimSpan",242],[1,"bool"],[10,"Sized",278],[1,"str"],[10,"AsRef",279],[17,"Item"],[10,"IntoIterator",280],[1,"f32"],[1,"f64"],[5,"LexError",0],[5,"Formatter",281],[8,"Result",281],[5,"TokenStream",282],[5,"Span",282],[6,"Result",283],[10,"Hasher",284],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[5,"IntoIter",259],[1,"isize"],[6,"Option",285],[5,"String",286],[1,"usize"],[10,"RangeBounds",287],[5,"TypeId",288],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[1,"tuple"]],"r":[[260,0]],"b":[[82,"impl-PartialEq%3CT%3E-for-Ident"],[83,"impl-PartialEq-for-Ident"],[84,"impl-Extend%3CTokenStream%3E-for-TokenStream"],[85,"impl-Extend%3CTokenTree%3E-for-TokenStream"],[91,"impl-Display-for-LexError"],[92,"impl-Debug-for-LexError"],[93,"impl-Debug-for-TokenStream"],[94,"impl-Display-for-TokenStream"],[96,"impl-Debug-for-TokenTree"],[97,"impl-Display-for-TokenTree"],[98,"impl-Debug-for-Group"],[99,"impl-Display-for-Group"],[101,"impl-Debug-for-Punct"],[102,"impl-Display-for-Punct"],[104,"impl-Debug-for-Ident"],[105,"impl-Display-for-Ident"],[106,"impl-Debug-for-Literal"],[107,"impl-Display-for-Literal"],[110,"impl-From%3CTokenTree%3E-for-TokenStream"],[111,"impl-From%3CTokenStream%3E-for-TokenStream"],[115,"impl-From%3CGroup%3E-for-TokenTree"],[116,"impl-From%3CLiteral%3E-for-TokenTree"],[117,"impl-From%3CPunct%3E-for-TokenTree"],[118,"impl-From%3CIdent%3E-for-TokenTree"],[125,"impl-FromIterator%3CTokenTree%3E-for-TokenStream"],[126,"impl-FromIterator%3CTokenStream%3E-for-TokenStream"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKAAEQAWABMALwAfAFEABQBcABAAbwACAHQAAwB+AAQAlwAAAKMAAACsAAAAtwAPAMgAHQD0AAUA+wAAAAABAwAFAQYADgEGAA=="}],\
["quote",{"t":"KKKMMMMMQNNQQNNNNM","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"],[18,"quote::ext"],[19,"proc_macro2"],[20,"core::convert"],[21,"core::iter::traits::collect"],[22,"quote::to_tokens"],[23,"quote::ident_fragment"],[24,"core::fmt"],[25,"core::option"]],"i":[0,0,0,2,2,2,2,9,0,8,8,0,0,9,9,8,8,8],"f":"```{{{f{bd}}c}h{{l{j}}}}{{{f{bd}}c}hn}{{{f{bd}}ce}hnA`}0{{{f{Ab}}{f{bAd}}}Af}`{A`Ah}0``{{{f{Ab}}}{{Al{Aj}}}}0{{{f{A`}}}Ah}0{{{f{A`}}{f{bAh}}}h}","D":"Bf","p":[[0,"mut"],[10,"TokenStreamExt",0,18],[1,"reference"],[1,"unit"],[6,"TokenTree",19],[10,"Into",20],[10,"IntoIterator",21],[10,"ToTokens",0,22],[10,"IdentFragment",0,23],[5,"Formatter",24],[8,"Result",24],[5,"TokenStream",19],[5,"Span",19],[6,"Option",25]],"r":[[0,23],[1,22],[2,18]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["unicode_ident",{"t":"HH","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"i":[0,0],"f":"{bd}0","D":"b","p":[[1,"char"],[1,"bool"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAEAAgA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
